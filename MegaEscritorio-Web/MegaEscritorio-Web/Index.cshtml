@{
    Layout = "~/Shared/_LayoutPage1.cshtml";

    var db = Database.Open("MegaEscritorioDB");
    var selectCommand = "SELECT id, created AS Created, customer_name AS Customer, width AS Width, length AS Length, material AS Material, num_drawers AS Drawers, rush_order_days AS [Rush Days], total_price AS [Total Price] FROM orders";

    var searchTermCustomer = "";

    if (!Request.QueryString["searchCustomer"].IsEmpty())
    {
        searchTermCustomer = "%" + Request.QueryString["searchCustomer"] + "%";
        selectCommand = "SELECT created AS Created, customer_name AS Customer, width AS Width, length AS Length, material AS Material, num_drawers AS Drawers, rush_order_days AS [Rush Days], total_price AS [Total Price] FROM orders WHERE customer_name LIKE @0";
    }

    var selectedData = db.Query(selectCommand, searchTermCustomer);
    var grid = new WebGrid(source: selectedData, rowsPerPage: 5);

    var imagePath = "";
    if (Request["material"] != null)
    {
        imagePath = @"Images\" + Request["material"];
    }
    //var selectMaterial = db.Query("SELECT id, material_description FROM materials");
    //var list = selectMaterial.ToList();
    //var listItemFirst = list[0];

    //List<SelectListItem> listItem = new List<SelectListItem>();

    /*
    listItem.Add(new SelectListItem
    {
        Text = list[0],
        Value = "2"
    });*/

    /* On Post */
    var customer = "";
    var width = "";
    var length = "";
    var materialDescription = "";
    var material = "";
    var drawers = "";
    var rushDays = "";

    if (IsPost)
    {
        customer = Request.Form["customer"];
        width = Request.Form["width"];
        length = Request.Form["length"];
        var area = width.AsFloat() * length.AsFloat();
        materialDescription = Request.Form["material"];

        switch (materialDescription)
        {
            case "oak.jpg":
                material = "Oak";
                break;
            case "laminate.jpg":
                material = "Laminate";
                break;
            case "pine.jpg":
                material = "Pine";
                break;
            case "marble.jpg":
                material = "Marble";
                break;
            case "cedar.jpg":
                material = "Cedar";
                break;
            case "aluminum.jpg":
                material = "Aluminum";
                break;
        }
        drawers = Request.Form["drawers"];
        rushDays = Request.Form["rushDays"];
        int rushDaysInt = rushDays.AsInt();

        //DynamicRecord indexId = selectedMaterial.FirstOrDefault();
        // var columnValue = indexId;

        // Calculate cost per number of drawers.
        double orderTotal = 200;
        // Drawers are 50 dollars each
        if (area > 1000)
        {
            orderTotal += (area - 1000) * 5;
        }

        if (drawers.AsInt() >= 1)
        {
            orderTotal += drawers.AsInt() * 50.00;
        }

        // Calculate desk material cost
        switch (material)
        {
            case "Oak":
                orderTotal += 200.00;
                break;
            case "Laminate":
                orderTotal += 100.00;
                break;
            case "Pine":
                orderTotal += 50.00;
                break;
            case "Marble":
                orderTotal += 275.00;
                break;
            case "Cedar":
                orderTotal += 150.00;
                break;
            case "Aluminum":
                orderTotal += 120.00;
                break;
        }

        // Query database for order charge price
        if (rushDays.AsInt() != 0)
        {
            var select = "SELECT rush_price FROM rush_prices WHERE (@0 > min_size) AND ((@0 <= max_size) OR (max_size IS NULL)) AND (rush_days = @1)";
            var orderCharge = db.QueryValue(select, area, rushDaysInt);
            orderTotal += orderCharge;
        }

        var dateAdded = DateTime.Now;
        var comInsert = "INSERT INTO orders(created, customer_name, width, length, material, num_drawers, rush_order_days, total_price) VALUES(@0, @1, @2, @3, @4, @5, @6, @7)";
        db.Execute(comInsert, dateAdded, customer, width, length, material, drawers, rushDays, orderTotal);
        Response.Redirect("~/index");
    }
}

<h1>Mega Escritorio</h1>
<p>Welcome to Mega Escritorio. We specialize in creating expertly crafted, customized desks. Order yours today</p>
<h1>New Order </h1>

    <form name="newOrder" method="post">
        <fieldset>
            <legend>Enter Order Information</legend>
            <label>Name: </label>
            <input name="customer" type="text" value="@Request.QueryString["customer"]" /> <br />
            <h3>Desk Dimensions</h3>
            <label>Width: </label>
            <input name="width" value="@Request.QueryString["width"]" type="text" />
            <label>Length: </label>
            <input name="length" value="@Request.QueryString["length"]" type="text" />
            <h3>Desk Specifications</h3>
            <label>Material: </label> <br />
           <!--Html.DropDownList("Test",listItem, new { class = "form-control"})-->
            <select id="materialOption" name="material">
                <option value="oak.jpg">Oak - $200.00</option>
                <option value="laminate.jpg">Laminate - $100.00</option>
                <option value="pine.jpg">Pine - $50.00</option>
                <option value="marble.jpg">Marble - $275.00</option>
                <option value="cedar.jpg">Cedar - $150.00</option>
                <option value="aluminum.jpg">Aluminum - $120.00</option>
            </select>

            <button formmethod="get">Show Preview</button>
            <div style="padding:10px;">
                @if (imagePath != "")
                {
                    <img src="@imagePath" alt="Image of Material" width="100px" />
                }
            </div>
 
            <label>Drawers - $50.00 each</label>
            <select name="drawers">
                <option>0</option>
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
                <option>6</option>
                <option>7</option>
            </select>
            <br />
            <label>Would you like your desk to be crafted sooner at an extra charge? Please select how soon you want your desk to be done. <br /> If you dont want it rushed please select 0 days</label> <br />
            <input name="rushDays" type="radio" value="0" checked /> 0 Days
            <input name="rushDays" type="radio" value="3" /> 3 Days
            <input name="rushDays" type="radio" value="5" /> 5 Days
            <input name="rushDays" type="radio" value="7" /> 7 days

            <br /><input type="submit" value="Submit Order" />
       </fieldset>
</form>

<div name="grid">
    @grid.GetHtml(
                    tableStyle: "grid",
                    headerStyle: "head",
                    alternatingRowStyle: "alt",
                    columns: grid.Columns (
                        grid.Column("Created")
                        , grid.Column("Customer")
                        , grid.Column("Width")
                        , grid.Column("Length")
                        , grid.Column("Material")
                        , grid.Column("Drawers")
                        , grid.Column("Rush Days")
                        , grid.Column("Total Price")
                        , grid.Column(format: @<a href="~/editDesk.cshtml?id=@item.id">Edit</a>)
                        , grid.Column(format: @<a href="~/deleteDesk.cshtml?id=@item.id">Delete</a>)))
</div>

<form method="get">
    <div>
        <label class="labelsearch" for="searchCustomer">Search by Customer Name</label>
        <input type="text" name="searchCustomer" value="@Request.QueryString["searchCustomer"]" />
        <input class="submitbutton" type="submit" value="Search" />
    </div>
</form>

